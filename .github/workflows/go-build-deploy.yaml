
name: CI Build, Upload, and Deploy Go HTTP Server

permissions:
  contents: read
  pull-requests: write
  id-token: write

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    env:
      ARTIFACTORY_URL: https://uhgsaaspoc.jfrog.io/artifactory
      ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
    outputs:
      artifact_url: ${{ steps.upload.outputs.artifact_url }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run Go Tests
        run: |
          cd go-app
          go test ./...

      - name: Build Go Project for Windows
        run: |
          cd go-app
          GOOS=windows GOARCH=amd64 go build -o ../myapp.exe

      - name: Upload to JFrog Artifactory
        id: upload
        run: |
          VERSION=${{ github.sha }}
          ARTIFACT_PATH="myapp-${VERSION}.exe"
          curl -u $ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD             -T myapp.exe             "$ARTIFACTORY_URL/go-uhg-go/$ARTIFACT_PATH"
          echo "artifact_url=$ARTIFACTORY_URL/go-uhg-go/$ARTIFACT_PATH" >> $GITHUB_OUTPUT

  deploy:
    needs: build-and-upload
    runs-on: ubuntu-latest
    env:
      ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download and Run myapp.exe on Windows VM
        run: |
          pair="${ARTIFACTORY_USER}:${ARTIFACTORY_PASSWORD}"
          artifact_url="${{ needs.build-and-upload.outputs.artifact_url }}"
          script="\$pair = '${pair}';           \$bytes = [System.Text.Encoding]::UTF8.GetBytes(\$pair);           \$encoded = [Convert]::ToBase64String(\$bytes);           Invoke-WebRequest -Uri '${artifact_url}' -Headers @{ Authorization = 'Basic ' + \$encoded } -OutFile 'C:\myapp.exe';           Start-Process -FilePath 'C:\myapp.exe'"

          az vm run-command invoke             --resource-group "artifactory-migration"             --name "vm1"             --command-id RunPowerShellScript             --scripts "$script"

      - name: Verify HTTP Server
        run: |
          az vm run-command invoke             --resource-group "artifactory-migration"             --name "vm1"             --command-id RunPowerShellScript             --scripts "Invoke-WebRequest -Uri 'http://localhost:8080/health' -UseBasicParsing"